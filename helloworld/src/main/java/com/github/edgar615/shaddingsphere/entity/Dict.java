package com.github.edgar615.shaddingsphere.entity;

import com.github.edgar615.util.db.Persistent;
import com.github.edgar615.util.db.PrimaryKey;
import com.google.common.base.MoreObjects;
import com.google.common.collect.Lists;
import com.google.common.collect.Maps;
import java.util.List;
import java.util.Map;

/**
* This class is generated by Jdbc code generator.
*
* Table : dict
* remarks: 
*
* @author Jdbc Code Generator Date 2020-12-30
*/
public class Dict implements Persistent<Long> {

    private static final long serialVersionUID = 1L;
    
    /**
    * Column : dict_id
    * remarks: id
    * default: 
    * isNullable: false
    * isAutoInc: true
    * isPrimary: true
    * type: -5
    * size: 19
    */
    @PrimaryKey
    private Long dictId;

    /**
    * Column : name
    * remarks: 
    * default: 
    * isNullable: true
    * isAutoInc: false
    * isPrimary: false
    * type: 12
    * size: 32
    */
    private String name;
    
    /**
    * Column : dict_code
    * remarks: 
    * default: 
    * isNullable: true
    * isAutoInc: false
    * isPrimary: false
    * type: 12
    * size: 32
    */
    private String dictCode;
    
    /**
    * Column : default_value
    * remarks: 
    * default: 
    * isNullable: true
    * isAutoInc: false
    * isPrimary: false
    * type: 12
    * size: 128
    */
    private String defaultValue;
    
    public Long getDictId() {
        return dictId;
    }

    public void setDictId(Long dictId) {
        this.dictId = dictId;
    }
    
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
    
    public String getDictCode() {
        return dictCode;
    }

    public void setDictCode(String dictCode) {
        this.dictCode = dictCode;
    }
    
    public String getDefaultValue() {
        return defaultValue;
    }

    public void setDefaultValue(String defaultValue) {
        this.defaultValue = defaultValue;
    }
    
    @Override
    public String toString() {
        return MoreObjects.toStringHelper("Dict")
            .add("dictId",  dictId)
            .add("name",  name)
            .add("dictCode",  dictCode)
            .add("defaultValue",  defaultValue)
           .toString();
    }

    @Override
    public List<String> fields() {
      return Lists.newArrayList("dictId",
						"name",
						"dictCode",
						"defaultValue");
    }
    
    @Override
    public String primaryField() {
        return "dictId";
    }

    @Override
    public Long id () {
    return dictId;
    }

    @Override
    public void setId(Long id) {
        this.dictId = id;
    }

    @Override
    public void setGeneratedKey(Number key) {
    
        this.dictId = key.longValue();
    
    }

    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> map = Maps.newHashMap();
        map.put("dictId",  dictId);
        map.put("name",  name);
        map.put("dictCode",  dictCode);
        map.put("defaultValue",  defaultValue);
        return map;
    }

    @Override
    public void fromMap(Map<String, Object> map) {
        if (map == null) {
            return;
        }
        if (map.get("dictId") instanceof Long) {
            this.dictId = (Long) map.get("dictId");
        }
        if (map.get("name") instanceof String) {
            this.name = (String) map.get("name");
        }
        if (map.get("dictCode") instanceof String) {
            this.dictCode = (String) map.get("dictCode");
        }
        if (map.get("defaultValue") instanceof String) {
            this.defaultValue = (String) map.get("defaultValue");
        }
        
    }

   /* START Do not remove/edit this line. CodeGenerator will preserve any code between start and end tags.*/
	/* END Do not remove/edit this line. CodeGenerator will preserve any code between start and end tags.*/
}